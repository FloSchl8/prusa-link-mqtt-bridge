name: Auto-Tagging for Patch Release

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for accurate tag detection

      - name: Get latest tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      - name: Calculate next patch version
        id: calculate_version
        run: |
          CURRENT_VERSION=${{ steps.get_latest_tag.outputs.latest_tag }}
          # Remove 'v' prefix if present
          VERSION_NUM=$(echo $CURRENT_VERSION | sed 's/^v//')
          # Split into major, minor, patch
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_NUM"
          NEXT_PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$NEXT_PATCH"
          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push new tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.calculate_version.outputs.new_tag }}
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/$GITHUB_REPOSITORY.git ${{ steps.calculate_version.outputs.new_tag }}

      - name: Dispatch Release Workflow
        run: |
          set -x
          echo "Attempting to dispatch release workflow for tag: ${{ steps.calculate_version.outputs.new_tag }}"
          curl -v -f -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            https://api.github.com/repos/$GITHUB_REPOSITORY/actions/workflows/release.yml/dispatches \
            -d '{"ref":"${{ steps.calculate_version.outputs.new_tag }}"}'
